plugins {
    id 'java'
    //id 'com.github.johnrengelman.shadow' version '7.1.0'
}

group = 'me.pan1st'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    //maven { url = "https://repo.aikar.co/content/groups/aikar/" }
}

//compileJava {
//    options.compilerArgs += ["-parameters"]
//}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.17.1-R0.1-SNAPSHOT'
   // implementation 'co.aikar:acf-paper:0.5.0-SNAPSHOT'
    //implementation 'com.github.stefvanschie.inventoryframework:IF:0.10.3'

    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
}

//shadowJar {
//    relocate 'co.aikar.commands', 'me.pan1st.easyemojis.utils.acf'
//    relocate 'co.aikar.locales', 'me.pan1st.easyemojis.utils.acf.locales'
//    //relocate 'com.github.stefvanschie.inventoryframework', 'me.pan1st.easyemojis.utils.if'
//}

//build.dependsOn shadowJar

def targetJavaVersion = 16
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
